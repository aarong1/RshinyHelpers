style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('float:left;font-size:20px;padding:0px;display:inline-block;vertical-align:top;color:',ifelse(change<0,'#f3172d;','lightgreen;'))),
shiny::tags$h4(style = 'display:inline-block;vertical-align:top;color:white;float:middle;',#font-weight:bold;
textid),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
}
runApp('testing_functions/testing_app')
shiny::tags$div(
style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('font-size:20px;padding:0px;display:inline-block;vertical-align:top;color:',ifelse(change<0,'#f3172d;','lightgreen;'))),
shiny::tags$h4(style = 'display:inline-block;vertical-align:top;color:white;float:middle;',#font-weight:bold;
textid),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
#' @return A tagList of the div tree to be rendered to the shiny ui
#' @examples
#' finance_vbox(label = 'Important metric',textid = '$463')
#' @export
finance_vbox <-
function(toplot=c(1,2,19,20,90,100,50,200),
label = 'label',
textid = 'textOutput_here',
col = 'rgba(0,0,0,0.6)') {#'rgba(60,130,180,0.5)'
first_value <- toplot[1]
#print(first_value)
last_value <- toplot[length(toplot)]
#print(last_value)
change <- round(-1*(first_value-last_value),2)
#print(change)
perc_change <- paste(round(-1*(first_value-last_value)/first_value*100,2),'%')
print(perc_change)
shiny::div(style='background-color:white;text-color:white;color:white;','hello')
shiny::tags$div(
style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('font-size:20px;padding:0px;display:inline-block;vertical-align:top;color:',ifelse(change<0,'#f3172d;','lightgreen;'))),
shiny::tags$h4(style = 'display:inline-block;vertical-align:top;color:white;float:middle;',#font-weight:bold;
textid),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
}
runApp('testing_functions/testing_app')
source("~/Documents/docs/RShinyHelpers/R/finance_value.R", echo=TRUE)
source("~/Documents/docs/RShinyHelpers/R/finance_value.R", echo=TRUE)
runApp('testing_functions/testing_app')
shiny::tags$div(
style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('font-size:20px;padding:0px;display:inline-block;vertical-align:top;color:',ifelse(change<0,'#f3172d;','lightgreen;'))),
shiny::tags$h4(style = 'display:inline-block;vertical-align:bottom;color:white;float:middle;',#font-weight:bold;
textid),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
#' @return A tagList of the div tree to be rendered to the shiny ui
#' @examples
#' finance_vbox(label = 'Important metric',textid = '$463')
#' @export
finance_vbox <-
function(toplot=c(1,2,19,20,90,100,50,200),
label = 'label',
textid = 'textOutput_here',
col = 'rgba(0,0,0,0.6)') {#'rgba(60,130,180,0.5)'
first_value <- toplot[1]
#print(first_value)
last_value <- toplot[length(toplot)]
#print(last_value)
change <- round(-1*(first_value-last_value),2)
#print(change)
perc_change <- paste(round(-1*(first_value-last_value)/first_value*100,2),'%')
print(perc_change)
shiny::div(style='background-color:white;text-color:white;color:white;','hello')
shiny::tags$div(
style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('font-size:20px;padding:0px;display:inline-block;vertical-align:top;color:',ifelse(change<0,'#f3172d;','lightgreen;'))),
shiny::tags$h4(style = 'display:inline-block;vertical-align:bottom;color:white;float:middle;',#font-weight:bold;
textid),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
}
runApp('testing_functions/testing_app')
source("~/Documents/docs/RShinyHelpers/R/finance_value.R", echo=TRUE)
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
shiny::tags$div(
style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
div(style='display:inline-block;vertical-align:top;',
shiny::tags$h4(style = 'display:inline-block;vertical-align:bottom;color:white;float:middle;',
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('font-size:20px;padding:0px;display:inline-block;vertical-align:bottom;color:',
ifelse(change<0,'#f3172d;','lightgreen;')))
textid)),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
#' @return A tagList of the div tree to be rendered to the shiny ui
#' @examples
#' finance_vbox(label = 'Important metric',textid = '$463')
#' @export
finance_vbox <-
function(toplot=c(1,2,19,20,90,100,50,200),
label = 'label',
textid = 'textOutput_here',
col = 'rgba(0,0,0,0.6)') {#'rgba(60,130,180,0.5)'
first_value <- toplot[1]
#print(first_value)
last_value <- toplot[length(toplot)]
#print(last_value)
change <- round(-1*(first_value-last_value),2)
#print(change)
perc_change <- paste(round(-1*(first_value-last_value)/first_value*100,2),'%')
print(perc_change)
shiny::div(style='background-color:white;text-color:white;color:white;','hello')
shiny::tags$div(
style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
div(style='display:inline-block;vertical-align:top;',
shiny::tags$h4(style = 'display:inline-block;vertical-align:bottom;color:white;float:middle;',
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('font-size:20px;padding:0px;display:inline-block;vertical-align:bottom;color:',
ifelse(change<0,'#f3172d;','lightgreen;')))
textid)),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
}
shiny::tags$div(
style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
div(style='display:inline-block;vertical-align:top;',
shiny::tags$h4(style = 'display:inline-block;vertical-align:bottom;color:white;float:middle;',
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('font-size:20px;padding:0px;display:inline-block;vertical-align:bottom;color:',
ifelse(change<0,'#f3172d;','lightgreen;'))),
textid)),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
#' @return A tagList of the div tree to be rendered to the shiny ui
#' @examples
#' finance_vbox(label = 'Important metric',textid = '$463')
#' @export
finance_vbox <-
function(toplot=c(1,2,19,20,90,100,50,200),
label = 'label',
textid = 'textOutput_here',
col = 'rgba(0,0,0,0.6)') {#'rgba(60,130,180,0.5)'
first_value <- toplot[1]
#print(first_value)
last_value <- toplot[length(toplot)]
#print(last_value)
change <- round(-1*(first_value-last_value),2)
#print(change)
perc_change <- paste(round(-1*(first_value-last_value)/first_value*100,2),'%')
print(perc_change)
shiny::div(style='background-color:white;text-color:white;color:white;','hello')
shiny::tags$div(
style =paste0(#box-shadow: 0 4px 10px 0 rgba(0, 0, 0,0.5), 0 4px 10px 0;
"padding:20px;
border-style :solid;
border-color:transparent;
border-radius:25px;
margin: 20px;
width:200px;
color:black;
line-height:8px;
font-weight: 200;
font-size:13px;
transform: scale(1, 1.1);
text-align:middle;
font-family:helvetica;
background-color:",col,";"),
shiny::tags$h6(label, style = 'padding:0px,;margin:0px;color:white;'),
div(style='display:inline-block;vertical-align:top;',
shiny::tags$h4(style = 'display:inline-block;vertical-align:bottom;color:white;float:middle;',
shiny::icon(ifelse(change<0,'arrow-down','arrow-up'),
lib='font-awesome',
style=paste0('font-size:20px;padding:0px;display:inline-block;vertical-align:bottom;color:',
ifelse(change<0,'#f3172d;','lightgreen;'))),
textid)),br(),br(),
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
change,
style='color:white;font-weight:bold;padding:5px;'),
#;display:inline;display:inline
shiny::span(class=ifelse(change<0,'badge badge-danger','badge badge-success'),
perc_change,style='color:white;font-weight:bold;padding:5px;margin:5px;'),#float:right;
shiny::fillRow(height='10px'),#hr(),
sparklines::sparkline(round(toplot,2),width='100%', "line",
list(fillColor='white',#NA
spotColor='white',
lineColor='white',
lineWidth=4,
minSpotColor='#f3172d',
maxSpotColor='#76ff03',
spotRadius='3')
))
}
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
1:10+runif(n=10,min=-5,max=5)
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runif(n=10,min=-1,max=1)
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
load_all()
rm(list = c("DT_hover_row_colour", "DT_peripheral_colour", "DT_selected_row_colour", "finance_vbox", "four_value", "saveplot", "vbox", "vbox_graphic", "vbox_reactive"))
load_all()
check()
use_r('runExample')
use_test()
load_all()
load_all()
runExample()
install()
build()
install()
load_all()
runExample()
runExample()
load_all()
runExample()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
load_all()
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
runApp('testing_functions/testing_app')
preview_site()
preview_site()
build()
